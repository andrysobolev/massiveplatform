<?php
/**
 * @file
 * Code for the TM Chapters feature.
 */

include_once 'tm_chapters.features.inc';

/**
 * Implement hook_ds_field_info()
 */
function tm_chapters_ds_fields_info($entity_type) {
  if ($entity_type != 'node') {
    return;
  }
  $fields = array();

  $fields['tm_ds_members_chapter'] = array(
    'title' => t('Amount chapter members'),
    'field_type' => DS_FIELD_TYPE_FUNCTION,
    'ui_limit' => array('chapter|full'),
    'function' => '_tm_members_chapter'
  );

  return array($entity_type => $fields);
}
/*
* Implements hook_menu()
*/
function tm_chapters_menu() {
  $items['chapters/contact/%'] = array(
    'title' => t('Contact chapter leaders'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tm_chapters_contact_form',1),
    'access arguments' => array('flag follow_members'),
    'type' => MENU_CALLBACK,
  );
  $items['chapters/export/%'] = array(
    'title' => t('Export Members'),
    'page callback' => 'tm_chapters_download_csv',
    'page arguments' => array(2),
    'access arguments' => array('approve users'),
    'type' => MENU_CALLBACK,
  );
  return $items;
  return $items;
}
/**
 * Custom function to print the amount of members belonging to a chapter
 */
function _tm_members_chapter($field, $title = NULL) {
  $flag = flag_get_flag('signup');
  $amount_members = $flag->get_count($field['entity']->nid);
  return $amount_members ? format_plural($amount_members, '1 member.','@members members', array('@members' => $amount_members)) : t('No members yet');
}

/* 
 * Alters a node on saving to make sure the leaders have the correct role
 */
function tm_chapters_node_presave($node){
  $role_name = 'chapter leader';
  
  // make sure we are working on a chapter node
  if ($node->type != "chapter") { return; }

  if ($role = user_role_load_by_name($role_name)) {
    foreach ($node->field_chapter_leaders[LANGUAGE_NONE] as $target){
      $user = user_load($target['target_id']);
      // make sure all chapter leaders have the right role set
      user_multiple_role_edit(array($user->uid), 'add_role', $role->rid);
    }
    // should also check $node->original for users being *removed*
    if (isset($node->original->field_chapter_leaders)){
      $original = flatten_chapter_leaders($node->original->field_chapter_leaders[LANGUAGE_NONE]);
      $new = flatten_chapter_leaders($node->field_chapter_leaders[LANGUAGE_NONE]);
      $removed = array_diff($original, $new);
      foreach ($removed as $rem){
        // check first that leader is not in other chapters
          $chapters = db_select('field_data_field_chapter_leaders', 'd')
          ->fields('d')
          ->condition('field_chapter_leaders_target_id',$rem,'=')
          ->condition('deleted',0,'=')
          ->execute();
        if ($chapters->rowCount() == 1){
          user_multiple_role_edit(array($rem), 'remove_role', $role->rid);
        }
      }
    }
  }
}
// array diff didn't like 2 dimensional arrays
function flatten_chapter_leaders($array){
  $newarray = array();
  foreach ($array as $item){
    $newarray[] = $item['target_id'];
  }
  return $newarray;
}
/* Form for chapter contact form */
function tm_chapters_contact_form($chapter){

  $form['subject'] = array(
    '#title' => t('Subject'),
    '#type' =>'textfield',
    '#required' => TRUE,
    );
  $form['body'] = array(
    '#type' =>'textarea',
    '#title' => t('Message'),
    '#rows' => 10,
    '#required' => TRUE,
    );
  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Contact chapter leaders'),
    '#id' => 'edit-submit'  
  );
  return $form;
}

/* Contact chapter leaders form submit */
function tm_chapters_contact_form_submit($form, &$form_state){
  global $user;
  $account = user_load($user->uid);
  $chapter = node_load(arg(2));
  if ($chapter){
    foreach($chapter->field_chapter_leaders[$chapter->language] as $leader){
      $chapterleader = user_load($leader['target_id']);
      tm_chapters_send_email($chapterleader->mail, $form_state['values']['subject'], $form_state['values']['body'], $account);
    }
  drupal_set_message(t('Your message has been sent.'));
  drupal_goto('node/'.$chapter->nid);
  }
}
/* Email sending function */
function tm_chapters_send_email($email, $subject, $body, $user){

    if (empty($user->language)) $language = LANGUAGE_NONE;
    else $language = $user->language;
    $name = $user->name;
    if (isset($user->field_user_first_name[$language])){
      $name = $user->field_user_first_name[$language][0]['value'];
      if (isset($user->field_user_first_name[$language])){
        $name .= ' '.$user->field_user_last_name[$language][0]['value'];
      }
    }

    $module = 'tm_chapters';
    $key = 'key';
    $language = language_default();
    $params = array();
    $from = NULL;
    $reply = $user->mail;
    $send = FALSE;
    $message = drupal_mail($module, $key, $email, $language, $params, $from, $send);
    // prepend something to this subject if you want to 
    $message['subject'] = "Contact Form: " . check_plain($subject);
    $message['body'] = array();
    $message['body'][] = "Hi, a member just sent a message via your Chapter contact form:";
    $message['body'][] = "Name: " . $name;
    $message['body'][] = "Subject: " . check_plain($subject);
    $message['body'][] = "Message: " . check_plain($body);
    $message['body'][] = "Member's profile: ".url('user/'.$user->uid, array('absolute'=>TRUE));
    $message['body'][] = "Member's email: " . $reply;

    // Retrieve the responsible implementation for this message.
    $system = drupal_mail_system($module, $key);

    // Format the message body.
    $message = $system->format($message);

    // Send e-mail.
    $message['result'] = $system->mail($message);
}

/* Download Chapter CSV function */
function tm_chapters_download_csv($nid){

  $chapternode = node_load($nid);
  $oldzone = date_default_timezone_get();
  date_default_timezone_set(drupal_get_user_timezone());
  $csvname = $chapternode->title.'_'.date('M_d_Y_Gi',time());
  date_default_timezone_set($oldzone);

  // csv header
  drupal_add_http_header('Content-Type', 'text/csv; utf-8');
  drupal_add_http_header('Content-Disposition', 'attachment; filename = '.$csvname);
  
  $fh = fopen('php://output', 'w');
  // puts a header row across the top of the csv
  $item = array(t('First name'),t('Last name'),t('Email'),t('Country'),t('Organisation'),t('Date registered'));
  fputcsv($fh, $item);

  // list of users
  $users = db_select('flagging', 'f')
    ->fields('f')
    ->condition('entity_id',$nid,'=')
    ->condition('entity_type','node','=')
    ->execute();
  while ($user = $users->fetchAssoc()){
    $account = user_load($user['uid']);
    if (empty($account->language)) $language = LANGUAGE_NONE;
    else $language = $account->language;

    $item = array();
    // columns in same order as the header array above
    $item[] = $account->field_user_first_name[$language][0]['value'];
    $item[] = $account->field_user_last_name[$language][0]['value'];
    $item[] = $account->mail;
    if (isset($account->field_user_country[$language][0])){
      $item[] = $account->field_user_country[$language][0]['iso2'];
    }
    else $item[] = t('none');
    if (isset($account->field_job_organization[$language][0]['value'])){
      $item[] = $account->field_job_organization[$language][0]['value'];
    }
    else $item[] = t('none');
    $item[] = date('j M Y',$user['timestamp']);
    fputcsv($fh, $item);
  } 
  fclose($fh);
}

// Joining first chapter sets home chapter 
// https://github.com/travelmassive/massiveplatform/issues/28
function tm_chapters_flag_flag($flag, $entity_id, $account, $flagging) {

  // only listen for signup to chapter
  if ($flag->name != 'signup') {
    return;
  }

  // get user who flagged
  $user = user_load($account->uid);

  // if they don't have a home chapter, set this as their home chapter
  if (isset($user->field_home_chapter) {
    if (sizeof($user->field_chapter) == 0) {
      $user->field_chapter[LANGUAGE_NONE][0]['target_id'] =  $entity_id;
      user_save($user);
    }
  }
}
